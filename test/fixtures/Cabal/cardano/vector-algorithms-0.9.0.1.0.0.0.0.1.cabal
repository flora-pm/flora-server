cabal-version:      >=1.10
name:               vector-algorithms
version:            0.9.0.1.0.0.0.0.1
license:            BSD3
license-file:       LICENSE
copyright:
    (c) 2008,2009,2010,2011,2012,2013,2014,2015 Dan Doel
    (c) 2015 Tim Baumann

maintainer:
    Dan Doel <dan.doel@gmail.com>
    Erik de Castro Lopo <erikd@mega-nerd.com>

author:             Dan Doel
homepage:           https://github.com/erikd/vector-algorithms/
synopsis:           Efficient algorithms for vector arrays
description:
    Efficient algorithms for sorting vector arrays. At some stage
    other vector algorithms may be added.

category:           Data
build-type:         Simple
extra-source-files: CHANGELOG.md

source-repository head
    type:     git
    location: https://github.com/erikd/vector-algorithms/

flag boundschecks
    description: Enable bounds checking

flag unsafechecks
    description:
        Enable bounds checking in unsafe operations at the cost of a
        significant performance penalty.

    default:     False

flag internalchecks
    description:
        Enable internal consistency checks at the cost of a
        significant performance penalty.

    default:     False

flag bench
    description:
        Build a benchmarking program to test vector-algorithms
        performance

flag properties
    description: Enable the quickcheck tests

flag llvm
    description: Build using llvm
    default:     False

library
    exposed-modules:
        Data.Vector.Algorithms
        Data.Vector.Algorithms.Optimal
        Data.Vector.Algorithms.Insertion
        Data.Vector.Algorithms.Intro
        Data.Vector.Algorithms.Merge
        Data.Vector.Algorithms.Radix
        Data.Vector.Algorithms.Search
        Data.Vector.Algorithms.Heap
        Data.Vector.Algorithms.AmericanFlag
        Data.Vector.Algorithms.Tim

    hs-source-dirs:   src
    other-modules:    Data.Vector.Algorithms.Common
    default-language: Haskell2010
    include-dirs:     include
    install-includes: vector.h
    ghc-options:      -funbox-strict-fields
    build-depends:
        base >=4.5 && <5,
        bitvec >=1.0 && <1.2,
        vector >=0.6 && <0.14,
        primitive >=0.3 && <0.9,
        bytestring >=0.9 && <1.0

    if !impl(ghc >=7.8)
        build-depends: tagged >=0.4 && <0.9

    if flag(llvm)
        ghc-options: -fllvm

    if flag(boundschecks)
        cpp-options: -DVECTOR_BOUNDS_CHECKS

    if flag(unsafechecks)
        cpp-options: -DVECTOR_UNSAFE_CHECKS

    if flag(internalchecks)
        cpp-options: -DVECTOR_INTERNAL_CHECKS

test-suite properties
    type:             exitcode-stdio-1.0
    main-is:          Tests.hs
    hs-source-dirs:   tests/properties
    other-modules:
        Optimal
        Properties
        Util

    default-language: Haskell2010

    if !flag(properties)
        buildable: False

    else
        build-depends:
            base,
            bytestring,
            containers,
            QuickCheck >2.9 && <2.15,
            vector,
            vector-algorithms

    if flag(llvm)
        ghc-options: -fllvm

benchmark simple-bench
    type:             exitcode-stdio-1.0
    main-is:          Main.hs
    hs-source-dirs:   bench/simple
    other-modules:    Blocks
    default-language: Haskell2010
    ghc-options:      -Wall
    build-depends:
        base,
        mwc-random,
        vector,
        vector-algorithms

    if !flag(bench)
        buildable: False

    if flag(llvm)
        ghc-options: -fllvm
